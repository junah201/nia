service: nia

provider:
  name: aws
  runtime: python3.10
  region: ap-northeast-2
  profile: nia
  logRetentionInDays: 30
  architecture: arm64
  memorySize: 128
  timeout: 29
  versionFunctions: false
  stage: prod
  tags:
    Service: ${self:service}
    Environment: ${self:provider.stage}
  iam:
    role: LambdaDefaultRole
  environment:
    DYNAMODB_TABLE_NAME: ${self:service}-db

functions:
  redirect_url:
    handler: lambdas/redirect_url.handler
    name: redirect_url
    description: 단축된 URL을 리다이렉트합니다.
    events: []
    url:
      cors: true
  post_url:
    handler: lambdas/post_url.handler
    name: post_url
    description: URL을 단축합니다. 기존에 등록된 커스텀 URL이 있으면 400 Bad Request를 반환합니다.
    events:
      - http:
          path: /url
          method: post
          cors: true

resources:
  Resources:
    LambdaDefaultRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: ${self:service}-LambdaDefaultRole
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                Service: lambda.amazonaws.com
              Action: sts:AssumeRole
        ManagedPolicyArns:
          - arn:aws:iam::aws:policy/AmazonS3FullAccess
          - arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess
          - arn:aws:iam::aws:policy/CloudWatchFullAccess
        Policies:
          - PolicyName: ${self:service}-LambdaDefaultPolicy
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: Allow
                  Action:
                    - logs:CreateLogGroup
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                  Resource: "arn:aws:logs:*:*:*"

    ApiGatewayRestApi:
      Type: AWS::ApiGateway::RestApi
      Properties:
        Name: NIA-API
        Description: API for nia.junah.dev

    ApiGatewayCustomDomain:
      Type: AWS::ApiGateway::DomainName
      Properties:
        DomainName: api.nia.junah.dev
        RegionalCertificateArn: arn:aws:acm:ap-northeast-2:533267168750:certificate/d42fc755-b204-4b5b-b270-2a58f39acaf9
        EndpointConfiguration:
          Types:
            - REGIONAL
        SecurityPolicy: TLS_1_2

    ApiGatewayBasePathMapping:
      Type: AWS::ApiGateway::BasePathMapping
      Properties:
        DomainName:
          Ref: ApiGatewayCustomDomain
        RestApiId:
          Ref: ApiGatewayRestApi
        Stage: prod

    RedirectCFDistribution:
      Type: AWS::CloudFront::Distribution
      Properties:
        DistributionConfig:
          PriceClass: PriceClass_200
          Origins:
            - Id: redirect_url
              DomainName:
                Fn::Select:
                  - 2
                  - Fn::Split:
                      - "/"
                      - Fn::GetAtt:
                          - RedirectUnderscoreurlLambdaFunctionUrl
                          - FunctionUrl
              ConnectionAttempts: 3
              ConnectionTimeout: 10
              CustomOriginConfig:
                OriginProtocolPolicy: https-only
                HTTPPort: 80
                HTTPSPort: 443
                OriginSSLProtocols:
                  - TLSv1.2
          Enabled: true
          ViewerCertificate:
            SslSupportMethod: sni-only
            AcmCertificateArn: arn:aws:acm:us-east-1:533267168750:certificate/4dd58504-54f9-4358-818b-5940a86bfbcc
          Aliases:
            - it.nia.junah.dev
          CacheBehaviors:
            - PathPattern: /
              TargetOriginId: redirect_url
              ViewerProtocolPolicy: redirect-to-https
              AllowedMethods:
                - HEAD
                - GET
                - OPTIONS
              CachedMethods:
                - GET
                - HEAD
              DefaultTTL: 0
              MinTTL: 0
              MaxTTL: 31536000
              ForwardedValues:
                QueryString: true
                Cookies:
                  Forward: none
          DefaultCacheBehavior:
            TargetOriginId: redirect_url
            ViewerProtocolPolicy: redirect-to-https
            AllowedMethods:
              - HEAD
              - GET
              - OPTIONS
            CachedMethods:
              - GET
              - HEAD
            DefaultTTL: 0
            MinTTL: 0
            MaxTTL: 31536000
            ForwardedValues:
              QueryString: true
              Cookies:
                Forward: none
    DynamoDBTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:service}-db
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: PK
            AttributeType: S
          - AttributeName: SK
            AttributeType: S
          - AttributeName: EntityType
            AttributeType: S
        KeySchema:
          - AttributeName: PK
            KeyType: HASH
          - AttributeName: SK
            KeyType: RANGE
        GlobalSecondaryIndexes:
          - IndexName: GSI-SK-PK
            KeySchema:
              - AttributeName: SK
                KeyType: HASH
              - AttributeName: PK
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
          - IndexName: GSI-EntityType-PK
            KeySchema:
              - AttributeName: EntityType
                KeyType: HASH
              - AttributeName: PK
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
        # Enable TTL
        TimeToLiveSpecification:
          AttributeName: TTL
          Enabled: true

package:
  include:
    - "lambdas/**"
    - "shared/**"
  exclude:
    - "node_modules/**"
    - "venv/**"
    - ".git/**"
    - ".github/**"
    - "frontend/**"
    - "serverless.yml"
    - ".serverless/**"

custom:
  pythonRequirements:
    slim: true
    usePoetry: true

plugins:
  - serverless-python-requirements
